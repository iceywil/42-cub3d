void	handle_element(t_cub *cub, char *line)
{
	char	*tmp;

	if (line_is_empty(cub, line))
		return ;
	if (!ft_strncmp(line, "NO ", 3) || !ft_strncmp(line, "SO ", 3)
		|| !ft_strncmp(line, "EA ", 3) || !ft_strncmp(line, "WE ", 3))
		tmp = ft_strdup(line + 3);
	else if (!ft_strncmp(line, "F ", 2) || !ft_strncmp(line, "C ", 2))
		tmp = ft_strdup(line + 2);
	else
		exit_error(cub, "Error: invalid element");
	if (!tmp)
		exit_error(cub, "Error : malloc failed");
	if (!ft_strncmp(line, "NO ", 3))
		cub->no = tmp;
	else if (!ft_strncmp(line, "SO ", 3))
		cub->so = tmp;
	else if (!ft_strncmp(line, "EA ", 3))
		cub->ea = tmp;
	else if (!ft_strncmp(line, "WE ", 3))
		cub->we = tmp;
	else if (!ft_strncmp(line, "F ", 2))
		cub->f = tmp;
	else if (!ft_strncmp(line, "C ", 2))
		cub->c = tmp;
}


int	line_is_empty(t_cub *cub, char *line)
{
	cub->i = 0;
	while (is_space(cub->line[cub->i]))
		cub->i++;
	if (!cub->line[cub->i])
		return (1);
	return (0);
}
